(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{607:function(s,a,t){"use strict";t.r(a);var e=t(31),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("虽然 kubeadm 屏蔽了细节，遇到问题难以排查，但是它简单快捷。")]),s._v(" "),t("p",[s._v("规划为单 master 三 node 的集群，并在 master 中设置 hosts。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("hostnamectl set-hostname k8s-master\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/hosts "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n10.0.0.140 k8s-master\n10.0.0.141 k8s-node1\n10.0.0.142 k8s-node2\n10.0.0.143 k8s-node3\nEOF")]),s._v("\n")])])]),t("h2",{attrs:{id:"初始化操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化操作"}},[s._v("#")]),s._v(" 初始化操作")]),s._v(" "),t("h3",{attrs:{id:"_1-关闭防火墙"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-关闭防火墙"}},[s._v("#")]),s._v(" 1. 关闭防火墙")]),s._v(" "),t("p",[s._v("方便测试，具体可根据 "),t("a",{attrs:{href:"https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#check-required-ports",target:"_blank",rel:"noopener noreferrer"}},[s._v("检查所需端口"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("systemctl stop firewalld\nsystemctl disable firewalld\n")])])]),t("h3",{attrs:{id:"_2-关闭-selinux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-关闭-selinux"}},[s._v("#")]),s._v(" 2. 关闭 selinux")]),s._v(" "),t("p",[s._v("这是允许容器访问主机文件系统所必需的，而这些操作时为了例如 Pod 网络工作正常。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("setenforce "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/enforcing/disabled/'")]),s._v(" /etc/selinux/config\n")])])]),t("h3",{attrs:{id:"_3-关闭-swap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-关闭-swap"}},[s._v("#")]),s._v(" 3. 关闭 swap")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("swapoff -a\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -ri "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*swap.*/#&/'")]),s._v(" /etc/fstab\n")])])]),t("h3",{attrs:{id:"_4-允许-iptables-检查桥接流量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-允许-iptables-检查桥接流量"}},[s._v("#")]),s._v(" 4. 允许 iptables 检查桥接流量")]),s._v(" "),t("p",[s._v("确保 "),t("code",[s._v("br_netfilter")]),s._v(" 模块被加载。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/modules-load.d/k8s.conf")]),s._v("\nbr_netfilter\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/sysctl.d/k8s.conf")]),s._v("\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF")]),s._v("\nsysctl --system  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生效")]),s._v("\n")])])]),t("h3",{attrs:{id:"_5-时间同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-时间同步"}},[s._v("#")]),s._v(" 5. 时间同步")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ntpdate -y\nntpdate ntp1.aliyun.com\n")])])]),t("h2",{attrs:{id:"安装依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装依赖"}},[s._v("#")]),s._v(" 安装依赖")]),s._v(" "),t("h3",{attrs:{id:"_1-安装-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-docker"}},[s._v("#")]),s._v(" 1. 安装 docker")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com -o get-docker.sh\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" get-docker.sh --mirror Aliyun\n\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" docker "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl start docker\n\ndocker --version\n")])])]),t("p",[s._v("还需要配置 Docker 源")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/docker/daemon.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\n{\n  "registry-mirrors": [\n    "https://hub-mirror.c.163.com",\n    "https://docker.mirrors.ustc.edu.cn"\n  ]\n}\nEOF')]),s._v("\n\nsystemctl daemon-reload\nsystemctl restart docker\n")])])]),t("h3",{attrs:{id:"_2-安装-kubeadm、kubelet-和-kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-kubeadm、kubelet-和-kubectl"}},[s._v("#")]),s._v(" 2. 安装 kubeadm、kubelet 和 kubectl")]),s._v(" "),t("p",[s._v("说明：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("kubeadm")]),s._v("：用来初始化集群的指令")]),s._v(" "),t("li",[t("code",[s._v("kubelet")]),s._v("：在集群中的每个节点上用来启动 Pod 和容器等")]),s._v(" "),t("li",[t("code",[s._v("kubectl")]),s._v("：用来与集群通信的命令行工具")])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/yum.repos.d/kubernetes.repo "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=0\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 需确保以下工具版本相同")]),s._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0\n\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" kubelet\nsystemctl daemon-reload\nsystemctl restart kubelet\n")])])]),t("h2",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("h3",{attrs:{id:"_1-在-master-进行-init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-在-master-进行-init"}},[s._v("#")]),s._v(" 1. 在 master 进行 init")]),s._v(" "),t("p",[s._v("master 节点至少需要有2个 CPU。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubeadm init "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --apiserver-advertise-address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.140 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --image-repository registry.aliyuncs.com/google_containers "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --kubernetes-version v1.18.0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --pod-network-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16\n")])])]),t("p",[s._v("然后根据提示：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -i /etc/kubernetes/admin.conf "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 nodes")]),s._v("\nkubectl get nodes\n")])])]),t("h3",{attrs:{id:"_2-在-node-申请加入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-在-node-申请加入"}},[s._v("#")]),s._v(" 2. 在 node 申请加入")]),s._v(" "),t("p",[s._v("master init 后存在如下提示，切换到 node 节点")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Then you can "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" any number of worker nodes by running the following on each as root:\n\nkubeadm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.130:6443 --token 5q3hp6.bfy624lj790rb68n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --discovery-token-ca-cert-hash sha256:49820391560bf7286be2ebf0d86fe0ba32352f1032b468896dc71383600cd697\n")])])]),t("p",[s._v("token 有效期为 12 小时。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubeadm token create --print-join-command\n")])])]),t("h3",{attrs:{id:"_3-增加-cni-网络插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-增加-cni-网络插件"}},[s._v("#")]),s._v(" 3. 增加 CNI 网络插件")]),s._v(" "),t("p",[s._v("查看 nodes 的 STATUS 还是 NotReady。是由于必须部署一个基于 Pod 网络插件的 容器网络接口（CNI），以便于 Pod 之间互相通信。")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n\nkubectl get pods -n kube-system\n")])])]),t("p",[s._v("如果存在 STATUS 为 Init:ImagePullBackOff，那么可前往 yml 配置文件寻找"),t("a",{attrs:{href:"https://github.com/coreos/flannel/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("对应的镜像"),t("OutboundLink")],1),s._v("，手动 "),t("code",[s._v("docker pull")]),s._v(" 或 "),t("code",[s._v("docker load")]),s._v("。")]),s._v(" "),t("p",[s._v("最后得到：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("NAME         STATUS     ROLES    AGE    VERSION\nk8s-master   Ready      master   3m8s   v1.18.0\nk8s-node1    Ready      <none>   55s    v1.18.0\nk8s-node2    Ready      <none>   54s    v1.18.0\nk8s-node3    Ready      <none>   51s    v1.18.0\n")])])]),t("h2",{attrs:{id:"清理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清理"}},[s._v("#")]),s._v(" 清理")]),s._v(" "),t("p",[s._v("如果你在集群中使用了一次性服务器进行测试，则可以关闭这些服务器，而无需进一步清理。你可以使用 "),t("code",[s._v("kubectl config delete-cluster")]),s._v(" 删除对集群的本地引用。")]),s._v(" "),t("p",[s._v("但是，如果要更干净地取消配置群集， 则应首先清空节点并确保该节点为空， 然后取消配置该节点。")]),s._v(" "),t("h3",{attrs:{id:"删除节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除节点"}},[s._v("#")]),s._v(" 删除节点")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl drain <node name> --delete-local-data --force --ignore-daemonsets")]),s._v("\nkubectl drain k8s-node1 --delete-local-data --force --ignore-daemonsets\nkubectl drain k8s-node2 --delete-local-data --force --ignore-daemonsets\nkubectl drain k8s-node3 --delete-local-data --force --ignore-daemonsets\n")])])]),t("p",[s._v("在删除节点前重置状态：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubeadm reset\n")])])]),t("p",[s._v("清除 iptables 规则及重置 IPVS 表：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("iptables -F "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" iptables -t nat -F "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" iptables -t mangle -F "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" iptables -X\n\nipvsadm -C\n")])])]),t("p",[s._v("最后删除节点：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl delete node <node name>")]),s._v("\nkubectl delete node k8s-node1\nkubectl delete node k8s-node2\nkubectl delete node k8s-node3\n")])])]),t("h2",{attrs:{id:"测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl create deployment nginx --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx\nkubectl expose deployment nginx --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" --type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NodePort\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据提示访问对应端口")]),s._v("\nkubectl get pod,svc\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);