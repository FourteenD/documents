import{r as a,o as n,c as s,a as e,F as o,d as r,b as t}from"./app.61465fad.js";const c={},d=r('<h2 id="busybox" tabindex="-1"><a class="header-anchor" href="#busybox" aria-hidden="true">#</a> Busybox</h2><p>以前常常会用 ubuntu 来测试一些命令行工具，现在有了更好的选择：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># --rm 用完即删</span>\ndocker run -it --rm busybox\n</code></pre></div><h2 id="node-js" tabindex="-1"><a class="header-anchor" href="#node-js" aria-hidden="true">#</a> Node.js</h2>',4),p=t("从这里基本就可以了解到这些镜像只是在 Docker Engine 上增加了一些依赖，然后你又基于这些依赖搭建你的环境，可以看看 "),i={href:"https://hub.docker.com/layers/node/library/node/erbium-buster-slim/images/sha256-c6ad96c5345c1a714e0052d08d83635c8e422ea0d103adc7f9f2df4fcfb7fe2d?context=explore",target:"_blank",rel:"noopener noreferrer"},u=t("Node Images Layers"),l=t(" 加深该概念。"),h=r('<div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 追加 bash，否则会直接进入 node</span>\ndocker run -it --rm node:slim <span class="token function">bash</span>\n</code></pre></div><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2><p>快速测试本地打包好的静态文件。</p><div class="language-bash ext-sh"><pre class="language-bash"><code>docker run --rm <span class="token punctuation">\\</span>\n\t-p <span class="token number">8080</span>:80 <span class="token punctuation">\\</span>\n\t-v /dir/dist/:/usr/share/nginx/html <span class="token punctuation">\\</span>\n\tnginx\n</code></pre></div><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><p>指定密码。</p><div class="language-bash ext-sh"><pre class="language-bash"><code>docker run --rm <span class="token punctuation">\\</span>\n\t-p <span class="token number">33006</span>:3306 <span class="token punctuation">\\</span>\n\t-e <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>mypasswd <span class="token punctuation">\\</span>\n  mysql\n</code></pre></div><h2 id="mongo" tabindex="-1"><a class="header-anchor" href="#mongo" aria-hidden="true">#</a> Mongo</h2><div class="language-bash ext-sh"><pre class="language-bash"><code>docker run -d <span class="token punctuation">\\</span>\n\t-p <span class="token number">27017</span>:27017 <span class="token punctuation">\\</span>\n  --name some-mongo <span class="token punctuation">\\</span>\n  mongo --auth\n</code></pre></div><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><p>指定密码。</p><div class="language-bash ext-sh"><pre class="language-bash"><code>docker run -d <span class="token punctuation">\\</span>\n\t-p <span class="token number">6379</span>:6379 <span class="token punctuation">\\</span>\n\t--name some-redis <span class="token punctuation">\\</span>\n\tredis --requirepass <span class="token string">&quot;redispwd&quot;</span>\n</code></pre></div>',12);c.render=function(r,t){const c=a("OutboundLink");return n(),s(o,null,[d,e("p",null,[p,e("a",i,[u,e(c)]),l]),h],64)};export default c;
