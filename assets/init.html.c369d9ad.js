import{r as n,o as s,c as a,a as e,F as o,d as c,b as t}from"./app.974cb5f8.js";const p={},r=c('<h2 id="ubuntu" tabindex="-1"><a class="header-anchor" href="#ubuntu" aria-hidden="true">#</a> Ubuntu</h2><h3 id="_1-卸载旧版本" tabindex="-1"><a class="header-anchor" href="#_1-卸载旧版本" aria-hidden="true">#</a> 1. 卸载旧版本</h3><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> remove docker docker-engine docker.io\n</code></pre></div><h3 id="_2-安装-ubuntu-维护版" tabindex="-1"><a class="header-anchor" href="#_2-安装-ubuntu-维护版" aria-hidden="true">#</a> 2. 安装 ubuntu 维护版</h3><p>ubuntu 团队曾经鸽了许久，后来重新开始更新。</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y docker.io\ndocker version <span class="token comment"># 19.03.8</span>\n</code></pre></div><h3 id="_3-安装-docker-维护版" tabindex="-1"><a class="header-anchor" href="#_3-安装-docker-维护版" aria-hidden="true">#</a> 3. 安装 docker 维护版</h3><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 统一先卸载旧版本</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> remove docker docker-engine docker.io containerd runc\n</code></pre></div><p>可任选以下一种形式进行安装。</p><h4 id="_3-1-软件源形式" tabindex="-1"><a class="header-anchor" href="#_3-1-软件源形式" aria-hidden="true">#</a> 3.1 软件源形式</h4><p>更新包及添加工具：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update\n\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token punctuation">\\</span>\n  apt-transport-https <span class="token punctuation">\\</span>\n  ca-certificates <span class="token punctuation">\\</span>\n  <span class="token function">curl</span> <span class="token punctuation">\\</span>\n  gnupg-agent <span class="token punctuation">\\</span>\n  software-properties-common\n</code></pre></div><p>添加 GPG key：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">curl</span> -fsSL https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -\n</code></pre></div><p>添加源：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> add-apt-repository <span class="token punctuation">\\</span>\n  <span class="token string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n  <span class="token variable"><span class="token variable">$(</span>lsb_release -cs<span class="token variable">)</span></span> \\\n  stable&quot;</span>\n \n<span class="token comment"># 嫌该速度慢可换源</span>\n<span class="token comment"># 清华源</span>\n<span class="token function">sudo</span> add-apt-repository <span class="token punctuation">\\</span>\n  <span class="token string">&quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \\\n  <span class="token variable"><span class="token variable">$(</span>lsb_release -cs<span class="token variable">)</span></span> \\\n  stable&quot;</span>\n<span class="token comment"># 阿里云源</span>\n<span class="token function">sudo</span> add-apt-repository <span class="token punctuation">\\</span>\n  <span class="token string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\\n  <span class="token variable"><span class="token variable">$(</span>lsb_release -cs<span class="token variable">)</span></span> \\\n  stable&quot;</span>\n</code></pre></div><p>安装：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> update\n\n<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce docker-ce-cli containerd.io\n</code></pre></div><h4 id="_3-2-便捷脚本形式" tabindex="-1"><a class="header-anchor" href="#_3-2-便捷脚本形式" aria-hidden="true">#</a> 3.2 便捷脚本形式</h4><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">curl</span> -fsSL https://get.docker.com -o get-docker.sh\n\n<span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh\n<span class="token comment"># 替换源</span>\n<span class="token comment"># sudo sh get-docker.sh --mirror Aliyun</span>\n<span class="token comment"># sudo sh get-docker.sh --mirror AzureChinaCloud</span>\n</code></pre></div><h2 id="centos" tabindex="-1"><a class="header-anchor" href="#centos" aria-hidden="true">#</a> CentOS</h2><h3 id="_1-卸载旧版本-1" tabindex="-1"><a class="header-anchor" href="#_1-卸载旧版本-1" aria-hidden="true">#</a> 1. 卸载旧版本</h3><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove docker <span class="token punctuation">\\</span>\n  docker-client <span class="token punctuation">\\</span>\n  docker-client-latest <span class="token punctuation">\\</span>\n  docker-common <span class="token punctuation">\\</span>\n  docker-latest <span class="token punctuation">\\</span>\n  docker-latest-logrotate <span class="token punctuation">\\</span>\n  docker-logrotate <span class="token punctuation">\\</span>\n  docker-engine\n</code></pre></div><h3 id="_2-安装-docker-维护版" tabindex="-1"><a class="header-anchor" href="#_2-安装-docker-维护版" aria-hidden="true">#</a> 2. 安装 docker 维护版</h3><p>可任选以下一种形式进行安装。</p><h4 id="_2-1-以软件源形式" tabindex="-1"><a class="header-anchor" href="#_2-1-以软件源形式" aria-hidden="true">#</a> 2.1 以软件源形式</h4><p>添加工具：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> -y yum-utils\n</code></pre></div><p>设置源：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum-config-manager <span class="token punctuation">\\</span>\n  --add-repo <span class="token punctuation">\\</span>\n  https://download.docker.com/linux/centos/docker-ce.repo\n  \n<span class="token comment"># 替换源</span>\n<span class="token comment"># 阿里云源</span>\n<span class="token function">sudo</span> <span class="token function">sed</span> -i <span class="token string">&#39;s/download.docker.com/mirrors.aliyun.com\\/docker-ce/g&#39;</span> /etc/yum.repos.d/docker-ce.repo\n<span class="token comment"># 清华源</span>\n<span class="token function">sudo</span> <span class="token function">sed</span> -i <span class="token string">&#39;s/download.docker.com/mirrors.tuna.tsinghua.edu.cn\\/docker-ce/g&#39;</span> /etc/yum.repos.d/docker-ce.repo\n</code></pre></div><p>安装：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io\n</code></pre></div><h4 id="_2-2-便捷脚本形式" tabindex="-1"><a class="header-anchor" href="#_2-2-便捷脚本形式" aria-hidden="true">#</a> 2.2 便捷脚本形式</h4><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">curl</span> -fsSL https://get.docker.com -o get-docker.sh\n\n<span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh\n<span class="token comment"># 替换源</span>\n<span class="token comment"># sudo sh get-docker.sh --mirror Aliyun</span>\n<span class="token comment"># sudo sh get-docker.sh --mirror AzureChinaCloud</span>\n</code></pre></div><h2 id="设置用户组" tabindex="-1"><a class="header-anchor" href="#设置用户组" aria-hidden="true">#</a> 设置用户组</h2><p>为了避免每次使用 Docker 都需要切换到 <code>sudo</code>，可以将 <code>docker</code> 加入当前用户。重新登录后生效。</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">groupadd</span> docker\n\n<span class="token function">sudo</span> <span class="token function">usermod</span> -aG docker <span class="token environment constant">$USER</span>\n<span class="token comment"># or</span>\n<span class="token function">sudo</span> <span class="token function">usermod</span> -aG docker USER_NAME\n</code></pre></div><h2 id="镜像加速" tabindex="-1"><a class="header-anchor" href="#镜像加速" aria-hidden="true">#</a> 镜像加速</h2><p>镜像服务可用：</p>',39),d={href:"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors",target:"_blank",rel:"noopener noreferrer"},l=t("阿里云镜像服务"),u={href:"https://www.163yun.com/help/documents/56918246390157312",target:"_blank",rel:"noopener noreferrer"},i=t("网易云镜像服务"),k=c('<p>修改本地的 <code>/etc/docker/daemon.json</code> 并修改 <code>registry-mirrors</code>，可为其配置多个避免某个挂掉：</p><div class="language-json ext-json"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="修改存储路径" tabindex="-1"><a class="header-anchor" href="#修改存储路径" aria-hidden="true">#</a> 修改存储路径</h2><p>通过 <code>docker info</code> 可以看到默认路径为 <code>/var/lib/docker</code>，而一般服务器会额外挂载硬盘。</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 修改配置文件</span>\n<span class="token function">vim</span> /etc/docker/daemon.json\n\n<span class="token comment"># 增加</span>\n<span class="token punctuation">{</span>\n  <span class="token string">&quot;data-root&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;/path/to/docker&quot;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment"># 重启 docker</span>\nsystemctl restart docker\n</code></pre></div><p>执行 <code>docker info</code> 进行校验。</p><h2 id="安装验证" tabindex="-1"><a class="header-anchor" href="#安装验证" aria-hidden="true">#</a> 安装验证</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> docker run hello-world\n</code></pre></div><h2 id="移除" tabindex="-1"><a class="header-anchor" href="#移除" aria-hidden="true">#</a> 移除</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># Ubuntu</span>\n<span class="token function">sudo</span> <span class="token function">apt-get</span> purge docker-ce docker-ce-cli containerd.io\n<span class="token comment"># CentOS</span>\n<span class="token function">sudo</span> yum remove docker-ce docker-ce-cli containerd.io\n\n<span class="token comment"># 还有 images、containers、volumes、and configurations</span>\n<span class="token function">sudo</span> <span class="token function">rm</span> -rf /var/lib/docker\n</code></pre></div>',10);p.render=function(c,t){const p=n("OutboundLink");return s(),a(o,null,[r,e("ol",null,[e("li",null,[e("a",d,[l,e(p)])]),e("li",null,[e("a",u,[i,e(p)])])]),k],64)};export default p;
