import{d as n}from"./app.221f0787.js";const s={},a=n('<h2 id="进程与端口" tabindex="-1"><a class="header-anchor" href="#进程与端口" aria-hidden="true">#</a> 进程与端口</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 进程</span>\n<span class="token comment"># ps 是 Process Status 的简写，可以通过 ps 来查看对应的进程</span>\n<span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> nginx\n<span class="token comment"># 端口</span>\n<span class="token comment"># netstat 是 net status 的简写， 可以查看有哪些端口正在被占用</span>\n<span class="token function">netstat</span> -lntup\n</code></pre></div><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><blockquote><p>无法启动时增加 sudo</p></blockquote><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 直接启动</span>\nnginx\n<span class="token comment"># systemctl 启动</span>\nsystemctl start nginx.service\n\n<span class="token comment"># 开机启动</span>\nsystemctl <span class="token builtin class-name">enable</span> nginx.service\n</code></pre></div><h2 id="停止" tabindex="-1"><a class="header-anchor" href="#停止" aria-hidden="true">#</a> 停止</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># normal quit</span>\nnginx -s quit\n<span class="token comment"># force stop</span>\nnginx -s stop\n<span class="token comment"># systemctl</span>\nsystemctl stop nginx.service\n\n<span class="token comment"># kill pid</span>\n<span class="token function">killall</span> nginx\n<span class="token comment">## 或</span>\n<span class="token function">kill</span> -9 pid\n</code></pre></div><h2 id="重启" tabindex="-1"><a class="header-anchor" href="#重启" aria-hidden="true">#</a> 重启</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># normal</span>\nnginx -s reload\n<span class="token comment"># systemctl</span>\nsystemctl restart nginx.service\n</code></pre></div><h2 id="启用安全组" tabindex="-1"><a class="header-anchor" href="#启用安全组" aria-hidden="true">#</a> 启用安全组</h2><p>上述的配置完成后可能依然无法访问，端口可能被阻挡了，如阿里云还需要配置安全组，放行对应的端口。</p><p>操作流程：</p><p><code>登录</code> &gt; <code>控制台</code> &gt; <code>云服务器ECS（左侧）</code> &gt; <code>安全组</code> &gt; <code>配置规则</code> &gt; <code>添加安全组规则</code> &gt; <code>填充内容</code> &gt; <code>确定</code></p>',13);s.render=function(n,s){return a};export default s;
